#!/bin/bash

export POSIXLY_CORRECT=yes
export LC_NUMERIC=en_US.UTF-8

command_list=(infected merge gender age daily monthly yearly countries districts regions)

COMMAND=""
FILE=""
GZ_FILE=""

# Parsing filter tag and commands
while [ $# -gt 0 ]; do
    case "$1" in
    -h)
        echo "Usage: ..."
        exit 0
        ;; 
    infected | merge | gender | age | daily | monthly | yearly | countries | districts | regions)
        if [ "$COMMAND" = "" ]; then
            COMMAND="$1"
            echo $COMMAND
            shift
        else 
            shift
        fi
        ;;
    -a)
        # TODO - validate DATE input 
        if [ "$2" = "" ]; then
            echo -e "-a: Missing date parameter"
            exit 1
        fi
        AFTER_DATE="$2"
        echo $AFTER_DATE
        shift
        shift
        ;;
    -b)
        # TODO - validate DATE input
        if [ "$2" = "" ]; then
            echo -e "-b: Missing date parameter"
            exit 1
        fi
        BEFORE_DATE="$2"
        echo $BEFORE_DATE
        shift
        shift
        ;;       
    -g)
        # TODO - validate GENDER input
        if [ "$2" = "" ]; then
            echo -e "-g: Missing gender parameter"
            exit 1
        fi
        GENDER="$2"
        echo $GENDER
        shift
        shift
        ;;
    -s)
        if [[ $2 =~ [0-9]{1} ]]; then
            echo $2
            WIDTH="$2"
            shift
            shift
            
        else
            shift
        fi
        ;;

    *.csv)
        FILE="$1"
        shift
        ;;

    *.csv.gz)
        GZ_FILE="$(gunzip -qc $1)"
        shift
        ;;

    ?*)
        echo -e "Invalid command"
        exit 1
        ;;
    *)
        break
        ;;
    esac
done

if [ "$FILE" != "" ]; then
    TEST=$(cat "$FILE" | awk 'END{print NR}')
    echo $TEST
fi

if [ "$GZ_FILE" != "" ]; then
    TEST=$(echo "$GZ_FILE" | awk 'END{print NR}')
    echo $TEST
fi
